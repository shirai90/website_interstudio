{"version":3,"file":"component---src-pages-mdx-frontmatter-slug-tsx-content-file-path-blog-guide-mdx-0ba333e91edfa13a50cd.js","mappings":"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","sources":["webpack://gatsby-sharp/./blog/guide.mdx","webpack://gatsby-sharp/./src/pages/{mdx.frontmatter__slug}.tsx","webpack://gatsby-sharp/./src/components/about-section.tsx","webpack://gatsby-sharp/./src/components/mdx-navigation.tsx","webpack://gatsby-sharp/./src/styles/modules/mdx-navigation.module.scss","webpack://gatsby-sharp/./src/styles/modules/about-section.module.scss","webpack://gatsby-sharp/./src/styles/modules/mdx-content.module.scss","webpack://gatsby-sharp/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    br: \"br\",\n    h2: \"h2\",\n    code: \"code\",\n    pre: \"pre\",\n    h3: \"h3\",\n    h4: \"h4\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"用户指南\"), \"\\n\", React.createElement(_components.p, null, \"这是上海科技大学interstudio社团的网站雏形，暂时仅有一个简单的框架，尚未填充具体的社团事宜或美术设计。\", React.createElement(_components.br), \"\\n\", \"本网站基于gatsby，tyepscript，sass和mdx构建，用户可以使用mdx轻松地编辑想要的文本。\"), \"\\n\", React.createElement(_components.h1, null, \"用mdx创建页面\"), \"\\n\", React.createElement(_components.h2, null, \"如何添加新的页面？\"), \"\\n\", React.createElement(_components.p, null, \"在\", React.createElement(_components.code, null, \"src/pages\"), \"目录下创建一个新的mdx文件，保证文件名以小写字母开头，不要包含特殊字符。\"), \"\\n\", React.createElement(_components.p, null, \"文件开头如下：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-mdx\"\n  }, \"---\\ntitle: xxx\\nslug: xxx（生成的网页对应的路径名称，如本页slug为guide，对应路径为guide）\\n---\\n\")), \"\\n\", React.createElement(_components.p, null, \"##简单学习mdx语法\"), \"\\n\", React.createElement(_components.h3, null, \"1.1 标题\"), \"\\n\", React.createElement(_components.p, null, \"标题通过在文本前加不同数量的 \", React.createElement(_components.code, null, \"#\"), \" 来表示，\", React.createElement(_components.code, null, \"#\"), \" 越多标题级别越低，字体越小。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-md\"\n  }, \"# 一级标题\\n## 二级标题\\n### 三级标题\\n\")), \"\\n\", React.createElement(_components.h3, null, \"1.2 段落和换行\"), \"\\n\", React.createElement(_components.p, null, \"在 Markdown 里，直接输入文本就是段落，若要换行，在上一行结尾加两个或以上空格后回车。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-md\"\n  }, \"这是一个段落。  \\n这是换行后的内容。\\n\")), \"\\n\", React.createElement(_components.h3, null, \"1.3 列表\"), \"\\n\", React.createElement(_components.h4, null, \"无序列表\"), \"\\n\", React.createElement(_components.p, null, \"用 \", React.createElement(_components.code, null, \"-\"), \"、\", React.createElement(_components.code, null, \"+\"), \" 或 \", React.createElement(_components.code, null, \"*\"), \" 开头。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-md\"\n  }, \"- 列表项 1\\n- 列表项 2\\n- 列表项 3\\n\")), \"\\n\", React.createElement(_components.h4, null, \"有序列表\"), \"\\n\", React.createElement(_components.p, null, \"用数字加 \", React.createElement(_components.code, null, \".\"), \" 开头。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-md\"\n  }, \"1. 第一个列表项\\n2. 第二个列表项\\n3. 第三个列表项\\n\")), \"\\n\", React.createElement(_components.h3, null, \"1.4 强调\"), \"\\n\", React.createElement(_components.h4, null, \"加粗\"), \"\\n\", React.createElement(_components.p, null, \"用两个 \", React.createElement(_components.code, null, \"**\"), \" 或 \", React.createElement(_components.code, null, \"__\"), \" 把文本包起来。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-md\"\n  }, \"**这是加粗的文本**\\n\")), \"\\n\", React.createElement(_components.h4, null, \"斜体\"), \"\\n\", React.createElement(_components.p, null, \"用一个 \", React.createElement(_components.code, null, \"*\"), \" 或 \", React.createElement(_components.code, null, \"_\"), \" 把文本包起来。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-md\"\n  }, \"*这是斜体的文本*\\n\")), \"\\n\", React.createElement(_components.h3, null, \"1.5 链接和图片\"), \"\\n\", React.createElement(_components.h4, null, \"链接\"), \"\\n\", React.createElement(_components.p, null, \"语法是 \", React.createElement(_components.code, null, \"[显示文本](链接地址)\"), \"。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-md\"\n  }, \"[访问InterStudio网站项目仓库](https://gitlab.com/interstudio1/interstudio_website)\\n\")), \"\\n\", React.createElement(_components.h4, null, \"图片\"), \"\\n\", React.createElement(_components.p, null, \"语法是 \", React.createElement(_components.code, null, \"![替代文本](图片地址)\"), \"。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-md\"\n  }, \"![示例图片](https://example.com/image.jpg)\\n\")), \"\\n\", React.createElement(_components.h3, null, \"其余内容建议参考\", React.createElement(_components.a, {\n    href: \"https://mdxjs.com/docs/getting-started\"\n  }, \"MDX官方文档\"), \"。\"), \"\\n\", React.createElement(_components.p, null, \"目前项目里已完成about页面（'/about'）以及本页guide页面（'/guide'）的创建，可参考其语法。\", React.createElement(_components.br), \"\\n\", \"依靠'gatsby-plugin-mdx-heading-anchor'插件，可以自动为mdx页面中的标题添加锚点和导航，方便跳转。\"), \"\\n\", React.createElement(_components.h1, null, \"用tyepscript创建组件或页面\"), \"\\n\", React.createElement(_components.p, null, \"具体编辑过程较为复杂，建议参考\", React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/docs/tutorial/part-zero/\"\n  }, \"gatsby官方文档\"), \"。\", React.createElement(_components.br), \"\\n\", \"目前项目里已完成404（'/404'），index（'/'），contact（'/contact'）页面及layout组件的创建，可参考其语法。\\n项目内about页面（'/about'），contact页面（'/contact'）暂无有效内容，仅供参考。\"), \"\\n\", React.createElement(_components.h1, null, \"具体可编辑内容\"), \"\\n\", React.createElement(_components.p, null, \"目前项目里仅有layout组件较为完整，设计较为确定，以layout组件为例，有很多需要更改的部分。\"), \"\\n\", React.createElement(_components.h2, null, \"1.联系方式\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"我插入了三张社交网站的图片（小红书、B站、微博）并附有跳转链接，理论上应该跳转至对应网站社团的官方主页，但目前建设未完成，故仅链接到网站首页。\"), \"\\n\", React.createElement(_components.li, null, \"社团具体地址、联系电话、邮箱均都没有填入。\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"2.图片\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"我反复使用了同一张暂时的社团logo的图片，白底我也没有管，需要在之后美术风格确定、美术素材统一后修改。\"), \"\\n\", React.createElement(_components.li, null, \"三张社交网站的图标也并不好看，之后也许可以再设计。\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/gatsby-sharp/blog/guide.mdx\";\nimport * as React from 'react';\nimport Layout from '../components/layout';\nimport {MDXProvider} from '@mdx-js/react';\nimport MDXNavigation from '../components/mdx-navigation';\nimport AboutImageLayout from '../components/about-section';\nimport * as styles from '../styles/modules/about-section.module.scss';\nimport * as mdxContentStyles from '../styles/modules/mdx-content.module.scss';\nconst components = {\n  AboutImageLayout,\n  h1: _ref => {\n    let {children, ...props} = _ref;\n    const titleText = typeof children === 'string' ? children : (children === null || children === void 0 ? void 0 : children.toString()) || '';\n    const id = titleText.replace(/[^\\w\\u4e00-\\u9fa5]/g, '').trim();\n    return React.createElement(\"h1\", Object.assign({\n      id: id,\n      className: styles.h1\n    }, props), children);\n  }\n};\nconst MDXPage = _ref2 => {\n  var _data$mdx$tableOfCont;\n  let {children, data} = _ref2;\n  const items = ((_data$mdx$tableOfCont = data.mdx.tableOfContents) === null || _data$mdx$tableOfCont === void 0 ? void 0 : _data$mdx$tableOfCont.items) || [];\n  React.useEffect(() => {\n    console.log('Checking heading elements:');\n    document.querySelectorAll('h1, h2, h3, h4, h5, h6').forEach(heading => {\n      console.log('Found heading:', {\n        id: heading.id,\n        text: heading.textContent,\n        tag: heading.tagName\n      });\n    });\n  }, []);\n  return React.createElement(Layout, {\n    title: \"MDX Page\"\n  }, React.createElement(MDXNavigation, {\n    items: items\n  }), React.createElement(\"div\", {\n    className: mdxContentStyles.mdxContainer\n  }, React.createElement(\"div\", {\n    className: mdxContentStyles.content\n  }, React.createElement(MDXProvider, {\n    components: components\n  }, children))));\n};\nconst query = \"3884731398\";\nMDXPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(MDXPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from 'react';\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport * as styles from '../styles/modules/about-section.module.scss';\n\ninterface AboutImageLayoutProps {\n  children: React.ReactNode;\n}\n\nconst AboutImageLayout: React.FC<AboutImageLayoutProps> = ({ children }) => {\n  return (\n    <div className={styles.section}>\n      <div className={styles.imageWrapper}>\n        <StaticImage\n          src=\"../images/group_photo.png\"\n          alt=\"团队合照\"\n          placeholder=\"blurred\"\n          aspectRatio={4/3}\n          width={400}\n          className={styles.image}\n        />\n      </div>\n      <div className={styles.content}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default AboutImageLayout;","import * as React from 'react';\nimport * as styles from '../styles/modules/mdx-navigation.module.scss';\n\ninterface NavigationItem {\n  url: string;\n  title: string;\n}\n\ninterface MDXNavigationProps {\n  items: NavigationItem[];\n}\n\nconst MDXNavigation: React.FC<MDXNavigationProps> = ({ items }) => {\n  const handleClick = (e: React.MouseEvent<HTMLAnchorElement>, url: string) => {\n    e.preventDefault();\n    const id = url.replace('#', '');\n    const element = document.getElementById(id);\n    \n    if (element) {\n      const elementTop = element.offsetTop;\n      const offset = 100;\n      const finalPosition = elementTop - offset;\n      \n      window.scrollTo({\n        top: finalPosition,\n        behavior: 'auto'\n      });\n    }\n  };\n\n  return (\n    <nav className={styles.navigation}>\n      <ul className={styles.navList}>\n        {items.map((item, index) => (\n          <li key={index} className={styles.navItem}>\n            <a \n              href={item.url}\n              className={styles.navLink}\n              onClick={(e) => handleClick(e, item.url)}\n            >\n              {item.title}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default MDXNavigation; ","// extracted by mini-css-extract-plugin\nexport var active = \"mdx-navigation-module--active--63520\";\nexport var navItem = \"mdx-navigation-module--navItem--d38e4\";\nexport var navLink = \"mdx-navigation-module--navLink--6c5af\";\nexport var navList = \"mdx-navigation-module--navList--a1398\";\nexport var navigation = \"mdx-navigation-module--navigation--6aafe\";","// extracted by mini-css-extract-plugin\nexport var content = \"about-section-module--content--3b20f\";\nexport var h1 = \"about-section-module--h1--8e705\";\nexport var imageWrapper = \"about-section-module--imageWrapper--6baab\";\nexport var section = \"about-section-module--section--a094c\";","// extracted by mini-css-extract-plugin\nexport var content = \"mdx-content-module--content--948a6\";\nexport var mdxContainer = \"mdx-content-module--mdxContainer--df172\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","br","h2","code","pre","h3","h4","a","ul","li","_provideComponents","components","React","className","href","wrapper","MDXLayout","AboutImageLayout","_ref","children","id","toString","replace","trim","styles","MDXPage","_ref2","_data$mdx$tableOfCont","data","items","mdx","tableOfContents","console","log","document","querySelectorAll","forEach","heading","text","textContent","tag","tagName","Layout","title","MDXNavigation","mdxContentStyles","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","StaticImage","src","alt","placeholder","aspectRatio","width","__imageData","require","map","item","index","key","url","onClick","e","handleClick","preventDefault","element","getElementById","finalPosition","offsetTop","window","scrollTo","top","behavior","content","imageWrapper","section","mdxContainer","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}